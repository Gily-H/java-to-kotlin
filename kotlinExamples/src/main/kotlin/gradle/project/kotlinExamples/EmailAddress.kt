package gradle.project.kotlinExamples

/**
 * "data" - class modifier
 * Generates the 'equals' 'hashCode' and 'toString' methods if undefined
 * We can define the methods with our own implementation
 *
 * Cons: generates a 'copy' method that gives direct access to internal state (no encapsulation)
 * Only define a data class that does not have invariants (properties that should not mutate)
 */
data class EmailAddress(private val localPart: String, private val domain: String) {
    /**
     * This will be autogenerated by using the "data" class modifier
     *
     * override fun equals(o: Any?): Boolean {
     *         if (this === o) {
     *             return true
     *         }
     *         if (o == null || javaClass != o.javaClass) {
     *             return false
     *         }
     *         val that = o as com.example.EmailAddress
     *         return localPart == that.localPart && domain == that.domain
     *     }
     *
     *     override fun hashCode(): Int {
     *         return Objects.hash(localPart, domain)
     *     }
     */

    // We want to implement our own toString method
    override fun toString(): String {
        return "$localPart@$domain"
    }

    companion object {
        // 'JvmStatic' annotation indicates this as a class static method
        @JvmStatic
        fun parse(value: String): EmailAddress {
            val atIndex = value.lastIndexOf('@')
            require(!(atIndex < 1 || atIndex > value.length - 1)) { "com.example.EmailAddress must be two parts separated by @" }
            return EmailAddress(
                value.substring(0, atIndex),
                value.substring(atIndex + 1)
            )
        }
    }
}